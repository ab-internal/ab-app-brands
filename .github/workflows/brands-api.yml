name: Brands API

on:
  workflow_dispatch:
    inputs:
      id:
        description: 'Brand ID (number)'
        required: true
        type: number
      name:
        description: 'Brand Name'
        required: false
        type: string
      logoUrl:
        description: 'Brand Logo URL'
        required: false
        type: string
      description:
        description: 'Brand Description'
        required: false
        type: string
      operation:
        description: 'Operation type'
        required: false
        default: create
        type: choice
        options:
          - create
          - edit
          - delete

jobs:
  update-brands-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Ensure data directory exists
        run: mkdir -p data

      - name: Read existing brands.json or create new
        id: read_json
        run: |
          if [ -f data/brands.json ]; then
            cat data/brands.json > brands.json.bak
          else
            echo '[]' > brands.json.bak
          fi

      - name: Update brands.json
        id: update_json
        env:
          INPUT_ID: ${{ github.event.inputs.id }}
          INPUT_NAME: ${{ github.event.inputs.name }}
          INPUT_LOGOURL: ${{ github.event.inputs.logoUrl }}
          INPUT_DESCRIPTION: ${{ github.event.inputs.description }}
          INPUT_OPERATION: ${{ github.event.inputs.operation }}
        
        run: |
          node <<'EOF'

          const fs = require('fs');
          const path = 'brands.json.bak';
          const data = JSON.parse(fs.readFileSync(path, 'utf8'));

          const id = Number(process.env.INPUT_ID);
          const index = data.findIndex(b => b.id === id);

          let newBrand;
          switch (process.env.INPUT_OPERATION) {

            case 'create':
               newBrand = {
                 id,
                 name: process.env.INPUT_NAME,
                 logoUrl: process.env.INPUT_LOGOURL,
                 description: process.env.INPUT_DESCRIPTION,
               };

               if (index >= 0) {
                 data[index] = newBrand;
                 console.log('Updated brand with id', id);
               } else {
                 data.push(newBrand);
                 console.log('Created brand with id', id);
               }

               require('fs').writeFileSync('data/brands.json', JSON.stringify(data, null, 2));

               break;

            case 'edit':
               newBrand = {
                 id,
                 name: process.env.INPUT_NAME,
                 logoUrl: process.env.INPUT_LOGOURL,
                 description: process.env.INPUT_DESCRIPTION,
               };

               if (index >= 0) {
                 data[index] = newBrand;
                 console.log('Updated brand with id', id);
               } else {
                 console.error('Brand with id', id, 'not found for edit.');
                 process.exit(1);
               }

               require('fs').writeFileSync('data/brands.json', JSON.stringify(data, null, 2));

               break;

            case 'delete':

              if (index === -1) {
                console.error('Brand with id', id, 'not found.');
                process.exit(1);
              }

              data.splice(index, 1);
              console.log('Deleted brand with id', id);

              require('fs').writeFileSync('data/brands.json', JSON.stringify(data, null, 2));

              break;

            default:

              console.error(`Unsupported or missing operation: '${process.env.INPUT_OPERATION}'.`);
              process.exit(1);

          }

          fs.writeFileSync('data/brands.json', JSON.stringify(data, null, 2));
          EOF

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/brands.json
          git commit -m "Update brands.json via API" || echo "No changes to commit"
          git push origin "HEAD:${GITHUB_REF_NAME}"
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
